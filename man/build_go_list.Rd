% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/analyses_GO.R
\name{build_go_list}
\alias{build_go_list}
\title{Build a Nested List of GO Analysis Results for Export}
\usage{
build_go_list(
  up_list,
  down_list,
  databases = c("MSigDB_Hallmarks", "GO_Biological_Process_2023", "BioPlanet_2019",
    "GO_Cellular_Component_2023", "Reactome_Pathways_2024")
)
}
\arguments{
\item{up_list}{A named list of GO analysis results for up-regulated genes. Each element should itself be a list
with one entry per database. Each database entry must contain a \code{$data} element.}

\item{down_list}{A named list of GO analysis results for down-regulated genes. Each element should have the same
structure as \code{up_list}.}

\item{databases}{A character vector of database names to extract from each result. Default is:
\code{c("MSigDB_Hallmarks", "GO_Biological_Process_2023", "BioPlanet_2019",
  "GO_Cellular_Component_2023", "Reactome_Pathways_2024")} for continuity with up_go() and down_go() functions.}
}
\value{
A named list of data frames. Each element corresponds to a comparison and is itself a list
of data frames. Each data frame is named to indicate the source database and whether it corresponds
to up- or down-regulated genes.
}
\description{
This function creates a nested list of GO analysis results for multiple comparisons by combining
up-regulated and down-regulated results. It expects two named lists: one with up-regulated GO results and one
with down-regulated GO results. For each comparison, it extracts the specified databases from both lists and
converts the results into data frames. The output is a nested list where each top-level element corresponds to a
comparison and contains a named list of data frames, with names indicating both the database and the regulation direction
(e.g., \code{"MSigDB_Hallmarks_UP"}).
}
\details{
For each comparison (the names that are common between \code{up_list} and \code{down_list}),
the function performs the following steps:
\itemize{
\item Iterates over the specified \code{databases} for the up-regulated results and converts the result (stored in \code{$data})
into a data frame, naming it with a suffix \code{"_UP"}.
\item Iterates over the specified \code{databases} for the down-regulated results and converts these similarly,
naming them with a suffix \code{"_Down"}.
\item Combines these into a single list for that comparison.
}
This nested list can be further processed or exported (for example, with \code{writexl::write_xlsx}, where each top-level
element becomes a separate sheet).
}
\examples{
\dontrun{
  # Assume you have two named lists, one for up-regulated and one for down-regulated GO results:
  # Each result object (e.g., up_PB_vs_all) contains entries like up_PB_vs_all[["MSigDB_Hallmarks"]]
  # with a 'data' field.
  up_list <- list(
    PB_vs_all = list(
      MSigDB_Hallmarks = up_PB_vs_all$MSigDB_Hallmarks,
      GO_Biological_Process_2023 = up_PB_vs_all$GO_Biological_Process_2023,
      BioPlanet_2019 = up_PB_vs_all$BioPlanet_2019,
      GO_Cellular_Component_2023 = up_PB_vs_all$GO_Cellular_Component_2023,
      Reactome_Pathways_2024 = up_PB_vs_all$Reactome_Pathways_2024
    ),
    PB_vs_KLS = list(
      MSigDB_Hallmarks = up_PB_vs_OT$MSigDB_Hallmarks,
      GO_Biological_Process_2023 = up_PB_vs_OT$GO_Biological_Process_2023,
      BioPlanet_2019 = up_PB_vs_OT$BioPlanet_2019,
      GO_Cellular_Component_2023 = up_PB_vs_OT$GO_Cellular_Component_2023,
      Reactome_Pathways_2024 = up_PB_vs_OT$Reactome_Pathways_2024
    )
  )

  down_list <- list(
    PB_vs_all = list(
      MSigDB_Hallmarks = down_PB_vs_all$MSigDB_Hallmarks,
      GO_Biological_Process_2023 = down_PB_vs_all$GO_Biological_Process_2023,
      BioPlanet_2019 = down_PB_vs_all$BioPlanet_2019,
      GO_Cellular_Component_2023 = down_PB_vs_all$GO_Cellular_Component_2023,
      Reactome_Pathways_2024 = down_PB_vs_all$Reactome_Pathways_2024
    ),
    PB_vs_KLS = list(
      MSigDB_Hallmarks = down_PB_vs_OT$MSigDB_Hallmarks,
      GO_Biological_Process_2023 = down_PB_vs_OT$GO_Biological_Process_2023,
      BioPlanet_2019 = down_PB_vs_OT$BioPlanet_2019,
      GO_Cellular_Component_2023 = down_PB_vs_OT$GO_Cellular_Component_2023,
      Reactome_Pathways_2024 = down_PB_vs_OT$Reactome_Pathways_2024
    )
  )

  # Build the nested GO list:
  go_list <- build_go_list(up_list, down_list)
}

}
